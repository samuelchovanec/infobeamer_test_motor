#!/usr/bin/python2.7
from time import sleep
from hosted import device

DIR = 20
STEP = 21
CW = 1
CCW = 0
SPR = 1

# Set up the direction and step pins
device.gpio.setup_pin(DIR, "out")
device.gpio.setup_pin(STEP, "out")
device.gpio.set_pin_value(DIR, CW)

MODE = (14, 15, 18)
# Set up the resolution mode pins
for pin in MODE:
    device.gpio.setup_pin(pin, "out")

RESOLUTION = {'Full': (0, 0, 0)}
for pin, value in zip(MODE, RESOLUTION['Full']):
    device.gpio.set_pin_value(pin, value)

# Timing settings
total_duration = 15  # Total duration of the sequence in seconds
phase_duration = 5  # Duration of each phase (acceleration, constant speed, deceleration) in seconds

# Initial delay (start faster)
initial_delay = 0.01 / 3  # Three times faster than the previous initial delay
# Minimum delay (maximum speed, reduced to make it three times faster)
minimum_delay = 0.002 / 3  # Three times faster than the previous minimum delay
# Calculate the rate of change for delay
delay_change_per_step = (initial_delay - minimum_delay) / (phase_duration / initial_delay)

# Initialize delay
delay = initial_delay
# Calculate total steps based on the average of initial and minimum delays
total_steps = int(total_duration / ((initial_delay + minimum_delay) / 2))

for x in range(total_steps):
    device.gpio.set_pin_value(STEP, 1)
    sleep(delay)
    device.gpio.set_pin_value(STEP, 0)
    sleep(delay)
    
    # Adjust delay for each phase
    if x < total_steps // 3:  # Acceleration
        delay = max(minimum_delay, delay - delay_change_per_step)
    elif x > 2 * total_steps // 3:  # Deceleration
        delay = min(initial_delay, delay + delay_change_per_step)
